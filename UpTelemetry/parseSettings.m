function [startChar, delimiter, CSDelimiter, endChar] = parseSettings(startCharIn, delimiterIn, CSDelimiterIn, endCharIn ,warnAudio)
%parseSettings Summary of this function goes here
%   Detailed explanation goes here
        
d = dialog('Visible','off',...
        'Position',[500 500 250 270],...
        'Name', 'Settings');

    txt_label = uicontrol('Parent',d,...
               'Style','text',...
               'String','Parse Settings',...
               'Position',[20 240 210 15],...
               'FontWeight','bold');
    
    txt_startChar = uicontrol('Parent',d,...
               'Style','text',...
               'String','Start Character',...
               'Position',[40 215 100 15],...
               'Min',1,'Max',1);
    txt_delimiter = uicontrol('Parent',d,...
               'Style','text',...
               'String','Delimiter',...
               'Position',[40 185 70 15],...
               'Min',1,'Max',1);
    txt_CSDelimiter = uicontrol('Parent',d,...
               'Style','text',...
               'Position',[40 155 113 15],...
               'String','Data/CS Delimiter',...
               'Min',1,'Max',1);
    txt_endChar = uicontrol('Parent',d,...
               'Style','text',...
               'Position',[40 125 97 15],...
               'String','End Character',...
               'Min',1,'Max',1);
%     txt_lengthParam = uicontrol('Parent',d,...
%                'Style','text',...
%                'Position',[40 95 131 15],...
%                'String','Constant Data Length',...
%                'Min',1,'Max',1);
           
%     tbx_delimiter = 0;
%     tbx_CSDelimiter = 0;
%     tbx_endChar = 0;
%     cbx_lengthParam = 0;
%            
    tbx_startChar = uicontrol('Parent',d,...
               'Style','edit',...
               'Position',[175 215 20 18]);
    tbx_delimiter = uicontrol('Parent',d,...
               'Style','edit',...
               'Position',[175 185 20 18]);
    tbx_CSDelimiter = uicontrol('Parent',d,...
               'Style','edit',...
               'Position',[175 155 20 18]);
    tbx_endChar = uicontrol('Parent',d,...
               'Style','edit',...
               'Position',[175 125 20 18]);
%     cbx_lengthParam = uicontrol('Parent',d,... 
%                'Style','checkbox',...
%                'String','',...
%                'Position',[178 96 15 15];
           
%     txt_stringSample = uicontrol('Parent',d,...
%                'Style','text',...
%                'Position',[12 61 42 15],...
%                'String','Sample:',...
%                'Min',1,'Max',1,...
%                'FontWeight','bold');
%     tbx_stringSample = uicontrol('Parent',d,...
%                'Style','edit',...
%                'Position',[57 60 180 18],...
%                'enable','inactive');
       
    btn_ok = uicontrol('Parent',d,...
               'Style','pushbutton', ...
               'Position',[53 20 60 25],...
               'String','Ok',...
               'Callback',@confirmCallback);
    btn_cancel = uicontrol('Parent',d,...
               'Position',[137 20 60 25],...
               'String','Cancel',...
               'Callback',@cancelCallback);

    set(tbx_startChar,'String',startCharIn);
    set(tbx_delimiter,'String',delimiterIn);
    set(tbx_CSDelimiter,'String',CSDelimiterIn);
    set(tbx_endChar,'String',endCharIn);

%     preview = parseSampleString(startCharIn,...
%                                 delimiterIn,...
%                                 CSDelimiterIn,...
%                                 endCharIn,...
%                                 lengthParamIn);
%                             
%     set(tbx_stringSample,'String',preview);                   
    set(d,'Visible','on');
% 
%         startChar = get(tbx_startChar, 'string');
%         delimiter = get(tbx_delimiter, 'string');
%         CSDelimiter = get(tbx_CSDelimiter, 'string');
%         endChar = get(tbx_endChar, 'string');
%         lengthParam = get(cbx_lengthParam, 'value');
%         
    uiwait(d);
        
        
%     function updatePreview(source,event,tbx_startChar,tbx_delimiter,tbx_CSDelimiter,tbx_endChar,cbx_lengthParam)
% 
%         startChar = trygetget(tbx_startChar,source,'string');
%         delimiter = trygetget(tbx_delimiter,source,'string');
%         CSDelimiter = tryget(tbx_CSDelimiter,source,'string');
%         endChar = tryget(tbx_endChar,source,'string');
%         lengthParam = tryget(cbx_lengthParam,source,'value');
%         
%         if lengthParam
%        
%             sampleString = strcat([startChar 'LAT' delimiter 'LONG' delimiter 'ALT' delimiter '######' delimiter '#...#' CSDelimiter 'CS' endChar]);
%         
%         else
%         
%             sampleString = strcat([startChar 'LAT' delimiter 'LONG' delimiter 'ALT' delimiter '###' delimiter '#...#' CSDelimiter 'LENGTH' delimiter 'CS' endChar]);
%         
%         end
% 
%     end
    
%     function updatePreview(tbx_startChar,tbx_delimiter,tbx_CSDelimiter,tbx_endChar,cbx_lengthParam,event)
%        
%         get(tbx_startChar)
%         get(tbx_delimiter)
%         
%        preview = parseSampleString( (get(tbx_startChar, 'string')),...
%                                     (get(tbx_delimiter, 'string')),...
%                                     (get(tbx_CSDelimiter, 'string')),...
%                                     (get(tbx_endChar, 'string')),...
%                                     (get(cbx_lengthParam, 'value')));
%                             
%        set(tbx_stringSample,'String',preview);
%        
%     end
    
    function confirmCallback(btn_ok,event)
        
        if  length(get(tbx_startChar,'String')) == 1 &&...
            length(get(tbx_delimiter,'String')) == 1 &&...
            length(get(tbx_CSDelimiter,'String'))== 1 && ...
            length(get(tbx_endChar,'String')) == 1
 
            % Save to outputs
            startChar = get(tbx_startChar, 'string');
            delimiter = get(tbx_delimiter, 'string');
            CSDelimiter = get(tbx_CSDelimiter, 'string');
            endChar = get(tbx_endChar, 'string');
            %lengthParam = get(cbx_lengthParam, 'value');
            
            delete(gcf);
            
            % Warning Sound
            play(warnAudio);
            
            msgbox('Settings saved.',''); 
            
        else
            
             % Warning Sound
            WarnWave = [sin(1:.6:400), sin(1:.7:400), sin(1:.4:400)];
            Audio = audioplayer(WarnWave, 22050);
            play(Audio);
   
            %Dialog
            errordlg('Enter only a single character.','Error','modal');
            return
  
        end
        
    end

    function cancelCallback(btn_cancel,event)
        
        try
            startChar = startCharIn;
            delimiter = delimiterIn;
            CSDelimiter = CSDelimiterIn;
            endChar = endCharIn;
            %lengthParam = lengthParamIn;
            
        catch  
            startChar = '';
            delimiter = '';
            CSDelimiter = '';
            endChar = ''; 
            
        end   
        
        delete(gcf);
        
    end

end

